// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

// User Management
model User {
  id               Int      @id @default(autoincrement())
  firstName        String   @db.VarChar(50)
  lastName         String?  @db.VarChar(50)
  email            String   @unique
  avatar           String?  @db.VarChar(255)
  age              Int?
  password         String   @db.VarChar(255)
  phoneNumber      String?  @db.VarChar(20)
  isActive         Boolean  @default(true)
  verificationCode String?  @db.VarChar(255)
  // role             Role?    @default(USER)
  gender           Gender?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  addresses Address[]
  token     Token[]
}

model Token {
  id           String   @id @default(uuid())
  userId       Int
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) // Add index for better performance
  @@map("tokens")
}

// seperate the wilaya from the address table
model Address {
  id           Int     @id @default(autoincrement())
  userId       Int
  addressLine1 String
  addressLine2 String?
  commune      String
  wilayaId     Int
  postalCode   String?
  country      String?
  phoneNumber  String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
